/*
 * TeleCalView.java
 */

package telecal;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class TeleCalView extends FrameView {

    public TeleCalView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = TeleCalApp.getApplication().getMainFrame();
            aboutBox = new TeleCalAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        TeleCalApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                mainPanel = new javax.swing.JPanel();
                mainTabs = new javax.swing.JTabbedPane();
                calendarPanel = new javax.swing.JPanel();
                calendarToolBar = new javax.swing.JToolBar();
                contactsScrollPane1 = new javax.swing.JScrollPane();
                dayEventsList = new javax.swing.JList();
                phoneGuidePanel = new javax.swing.JPanel();
                groupsPanel = new javax.swing.JPanel();
                groupsToolBar = new javax.swing.JToolBar();
                groupsScrollPane = new javax.swing.JScrollPane();
                groupsList = new javax.swing.JList();
                contactsPanel = new javax.swing.JPanel();
                contactsScrollPane = new javax.swing.JScrollPane();
                contactsList = new javax.swing.JList();
                phoneGuideContactsToolBar = new javax.swing.JToolBar();
                menuBar = new javax.swing.JMenuBar();
                javax.swing.JMenu fileMenu = new javax.swing.JMenu();
                javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
                javax.swing.JMenu helpMenu = new javax.swing.JMenu();
                javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

                mainPanel.setName("mainPanel"); // NOI18N

                mainTabs.setName("mainTabs"); // NOI18N

                calendarPanel.setName("calendarPanel"); // NOI18N

                calendarToolBar.setRollover(true);
                calendarToolBar.setName("calendarToolBar"); // NOI18N

                contactsScrollPane1.setName("contactsScrollPane1"); // NOI18N

                dayEventsList.setModel(new javax.swing.AbstractListModel() {
                        String[] strings = { "12:30 Meeting with James Castel", "15:00 Learn how to walk ont hands", " ", " " };
                        public int getSize() { return strings.length; }
                        public Object getElementAt(int i) { return strings[i]; }
                });
                dayEventsList.setName("dayEventsList"); // NOI18N
                contactsScrollPane1.setViewportView(dayEventsList);

                javax.swing.GroupLayout calendarPanelLayout = new javax.swing.GroupLayout(calendarPanel);
                calendarPanel.setLayout(calendarPanelLayout);
                calendarPanelLayout.setHorizontalGroup(
                        calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(calendarToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, calendarPanelLayout.createSequentialGroup()
                                .addContainerGap(506, Short.MAX_VALUE)
                                .addComponent(contactsScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                );
                calendarPanelLayout.setVerticalGroup(
                        calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(calendarPanelLayout.createSequentialGroup()
                                .addComponent(calendarToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactsScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                .addContainerGap())
                );

                org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(telecal.TeleCalApp.class).getContext().getResourceMap(TeleCalView.class);
                mainTabs.addTab(resourceMap.getString("calendarPanel.TabConstraints.tabTitle"), calendarPanel); // NOI18N

                phoneGuidePanel.setName("phoneGuidePanel"); // NOI18N

                groupsPanel.setName("groupsPanel"); // NOI18N

                groupsToolBar.setRollover(true);
                groupsToolBar.setName("groupsToolBar"); // NOI18N

                groupsScrollPane.setName("groupsScrollPane"); // NOI18N

                groupsList.setModel(new javax.swing.AbstractListModel() {
                        String[] strings = { "Amigos", "Co-Workers" };
                        public int getSize() { return strings.length; }
                        public Object getElementAt(int i) { return strings[i]; }
                });
                groupsList.setName("groupsList"); // NOI18N
                groupsScrollPane.setViewportView(groupsList);

                javax.swing.GroupLayout groupsPanelLayout = new javax.swing.GroupLayout(groupsPanel);
                groupsPanel.setLayout(groupsPanelLayout);
                groupsPanelLayout.setHorizontalGroup(
                        groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(groupsToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addComponent(groupsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                );
                groupsPanelLayout.setVerticalGroup(
                        groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(groupsPanelLayout.createSequentialGroup()
                                .addComponent(groupsToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(groupsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                );

                contactsPanel.setName("contactsPanel"); // NOI18N

                contactsScrollPane.setName("contactsScrollPane"); // NOI18N

                contactsList.setModel(new javax.swing.AbstractListModel() {
                        String[] strings = { "John fisher", "Karmic the wolf" };
                        public int getSize() { return strings.length; }
                        public Object getElementAt(int i) { return strings[i]; }
                });
                contactsList.setName("contactsList"); // NOI18N
                contactsScrollPane.setViewportView(contactsList);

                phoneGuideContactsToolBar.setRollover(true);
                phoneGuideContactsToolBar.setName("phoneGuideContactsToolBar"); // NOI18N

                javax.swing.GroupLayout contactsPanelLayout = new javax.swing.GroupLayout(contactsPanel);
                contactsPanel.setLayout(contactsPanelLayout);
                contactsPanelLayout.setHorizontalGroup(
                        contactsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(phoneGuideContactsToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                        .addComponent(contactsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                );
                contactsPanelLayout.setVerticalGroup(
                        contactsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(contactsPanelLayout.createSequentialGroup()
                                .addComponent(phoneGuideContactsToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                .addContainerGap())
                );

                javax.swing.GroupLayout phoneGuidePanelLayout = new javax.swing.GroupLayout(phoneGuidePanel);
                phoneGuidePanel.setLayout(phoneGuidePanelLayout);
                phoneGuidePanelLayout.setHorizontalGroup(
                        phoneGuidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(phoneGuidePanelLayout.createSequentialGroup()
                                .addComponent(groupsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                phoneGuidePanelLayout.setVerticalGroup(
                        phoneGuidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(phoneGuidePanelLayout.createSequentialGroup()
                                .addComponent(groupsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                        .addComponent(contactsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                mainTabs.addTab(resourceMap.getString("phoneGuidePanel.TabConstraints.tabTitle"), phoneGuidePanel); // NOI18N

                javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
                mainPanel.setLayout(mainPanelLayout);
                mainPanelLayout.setHorizontalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainTabs)
                );
                mainPanelLayout.setVerticalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                );

                mainTabs.getAccessibleContext().setAccessibleName(resourceMap.getString("jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N

                menuBar.setName("menuBar"); // NOI18N

                fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
                fileMenu.setName("fileMenu"); // NOI18N

                javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(telecal.TeleCalApp.class).getContext().getActionMap(TeleCalView.class, this);
                exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
                exitMenuItem.setName("exitMenuItem"); // NOI18N
                fileMenu.add(exitMenuItem);

                menuBar.add(fileMenu);

                helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
                helpMenu.setName("helpMenu"); // NOI18N

                aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
                aboutMenuItem.setName("aboutMenuItem"); // NOI18N
                helpMenu.add(aboutMenuItem);

                menuBar.add(helpMenu);

                setComponent(mainPanel);
                setMenuBar(menuBar);
        }// </editor-fold>//GEN-END:initComponents

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JPanel calendarPanel;
        private javax.swing.JToolBar calendarToolBar;
        private javax.swing.JList contactsList;
        private javax.swing.JPanel contactsPanel;
        private javax.swing.JScrollPane contactsScrollPane;
        private javax.swing.JScrollPane contactsScrollPane1;
        private javax.swing.JList dayEventsList;
        private javax.swing.JList groupsList;
        private javax.swing.JPanel groupsPanel;
        private javax.swing.JScrollPane groupsScrollPane;
        private javax.swing.JToolBar groupsToolBar;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JTabbedPane mainTabs;
        private javax.swing.JMenuBar menuBar;
        private javax.swing.JToolBar phoneGuideContactsToolBar;
        private javax.swing.JPanel phoneGuidePanel;
        // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}