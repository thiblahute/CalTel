/**
 * @Author: David Vargas, Thibault Saunier, Carlos Lagos D.
 *
 * Created on Sep 27, 2009, 8:18:19 PM
 */

package upla.caltel;

import com.google.gdata.client.calendar.CalendarService;
import com.google.gdata.client.contacts.ContactsService;
import com.google.gdata.data.ParseSource;
import java.io.FileInputStream;
import java.io.File;


/**
 * Permit to ask for connexion informations or calTel path depending if we are working online or offline
 */
public class conexionwindow extends javax.swing.JFrame 
{

    private CalTelApp app;
    /** Creates new form addEvent */
    public conexionwindow(CalTelApp _app) {
        this.app = _app;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                eventNameLabel = new java.awt.Label();
                mailTxt = new java.awt.TextField();
                timeLabel = new java.awt.Label();
                acceptBtn = new java.awt.Button();
                cancelBtn = new java.awt.Button();
                jLabel1 = new javax.swing.JLabel();
                passwordTxt = new javax.swing.JPasswordField();
                contactsFilePath = new java.awt.Label();
                contactTxt = new java.awt.TextField();
                calendarFilePath = new java.awt.Label();
                calendarTxt = new java.awt.TextField();
                cargarBtn = new java.awt.Button();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setName("Form"); // NOI18N

                org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(conexionwindow.class);
                eventNameLabel.setFont(resourceMap.getFont("eventNameLabel.font")); // NOI18N
                eventNameLabel.setName("eventNameLabel"); // NOI18N
                eventNameLabel.setText(resourceMap.getString("eventNameLabel.text")); // NOI18N

                mailTxt.setFont(resourceMap.getFont("emailTxt.font")); // NOI18N
                mailTxt.setName("emailTxt"); // NOI18N
                mailTxt.setText(resourceMap.getString("emailTxt.text")); // NOI18N

                timeLabel.setFont(resourceMap.getFont("timeLabel.font")); // NOI18N
                timeLabel.setName("timeLabel"); // NOI18N
                timeLabel.setText(resourceMap.getString("timeLabel.text")); // NOI18N

                acceptBtn.setLabel(resourceMap.getString("Accept.label")); // NOI18N
                acceptBtn.setName("Accept"); // NOI18N
                acceptBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                acceptBtnMouseClicked(evt);
                        }
                });

                cancelBtn.setLabel(resourceMap.getString("cancelBtn.label")); // NOI18N
                cancelBtn.setName("cancelBtn"); // NOI18N
                cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                cancelBtnMouseClicked(evt);
                        }
                });
                cancelBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cancelBtnActionPerformed(evt);
                        }
                });

                jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
                jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
                jLabel1.setName("jLabel1"); // NOI18N

                passwordTxt.setText(resourceMap.getString("passwordTxt.text")); // NOI18N
                passwordTxt.setName("passwordTxt"); // NOI18N

                contactsFilePath.setFont(resourceMap.getFont("contactsFilePath.font")); // NOI18N
                contactsFilePath.setName("contactsFilePath"); // NOI18N
                contactsFilePath.setText(resourceMap.getString("contactsFilePath.text")); // NOI18N

                contactTxt.setFont(resourceMap.getFont("contactTxt.font")); // NOI18N
                contactTxt.setName("contactTxt"); // NOI18N
                contactTxt.setText(resourceMap.getString("contactTxt.text")); // NOI18N

                calendarFilePath.setFont(resourceMap.getFont("calendarFilePath.font")); // NOI18N
                calendarFilePath.setName("calendarFilePath"); // NOI18N
                calendarFilePath.setText(resourceMap.getString("calendarFilePath.text")); // NOI18N

                calendarTxt.setFont(resourceMap.getFont("calendarTxt.font")); // NOI18N
                calendarTxt.setName("calendarTxt"); // NOI18N
                calendarTxt.setText(resourceMap.getString("calendarTxt.text")); // NOI18N

                cargarBtn.setLabel(resourceMap.getString("cargargBtn.label")); // NOI18N
                cargarBtn.setName("cargargBtn"); // NOI18N
                cargarBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                cargarBtnMouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(192, 192, 192)
                                                .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(182, 182, 182)
                                                                .addComponent(cargarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(acceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(16, 16, 16)
                                                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(contactsFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(eventNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(calendarFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(19, 19, 19)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(passwordTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                                                                                        .addComponent(mailTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(calendarTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                                                                                        .addComponent(contactTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))))))))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(calendarFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(calendarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(contactsFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(eventNameLabel, 0, 0, Short.MAX_VALUE)
                                        .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cargarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(acceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                );

                eventNameLabel.getAccessibleContext().setAccessibleName(resourceMap.getString("eventNameLabel.AccessibleContext.accessibleName")); // NOI18N
                timeLabel.getAccessibleContext().setAccessibleName(resourceMap.getString("timeLabel.AccessibleContext.accessibleName")); // NOI18N

                pack();
        }// </editor-fold>//GEN-END:initComponents

    public FileInputStream getFileStream (String filename, String type)
      {
        FileInputStream stream = null;
        File file = null;

        try
          {
            file = new File(filename);
            if (type == "calendar")
                stream =  new FileInputStream (file);
            else if (type == "contact")
                stream = new FileInputStream (file);
          }
        catch (java.lang.NullPointerException exception)
          {
            System.out.println ("NullPointerException");
          }
        catch (java.io.FileNotFoundException exception)
          {
            System.out.println (filename+" FileNotFoundException");
          }
        catch (java.lang.SecurityException exception)
          {
            System.out.println (filename + "SecurityException");
          }

        return stream;
      }

    /**
     * CargarBtn callback, it actually load the xml files and call CalTelCalendarHandling :: loadFile 
     * and CalTelContactHandling :: loadFile.
     * @param evt the mouse event
     * */
    private void cargarBtnMouseClicked(java.awt.event.MouseEvent evt) 
      {
        System.out.println ("Trying files...");

        FileInputStream calStream = this.getFileStream (this.calendarTxt.getText(), "calendar");
        FileInputStream contStream = this.getFileStream (this.contactTxt.getText(), "contact");

        if (calStream != null)
          {
            System.out.println ("Calendar file seems to be valid...");
            CalTelCalendarHandling calTelCalendarHandling = new CalTelCalendarHandling ();
            calTelCalendarHandling.loadFile (this.app.getCalTelView(), calStream);
          }
        if (contStream != null)
          {
            System.out.println ("Contact file seems to be valid...");
            CalTelContactHandling calTelContactHandling = new CalTelContactHandling ();

            calTelContactHandling.loadFile (this.app.getCalTelView(), contStream);
          }
        this.hide();
      }

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) 
      {
      }

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) 
      {
      }

    /**
     *  Permit to connect to google server getting information from the textBox and passwordBox
     *  and call CalTelCalendarHandling::setCalendarGui and CalTelContactHandling::setContactGui
     *  @param evt the mouseClick event
     * */
    private void acceptBtnMouseClicked(java.awt.event.MouseEvent evt) 
      {
        boolean connected = true;
        String userName = this.mailTxt.getText();
        char[] password = this.passwordTxt.getPassword ();
        String psswd = new String (password); 
         try 
           {
             System.out.println ("Connecting...");
             this.app.getContactService().setUserCredentials (userName, psswd);
           }
         catch ( com.google.gdata.util.AuthenticationException exception) 
           {
             connected = false;
             System.out.println("com.google.gdata.util.AuthenticationException");
           }
         try 
           {
             this.app.getCalendarService().setUserCredentials (userName, psswd);
           }
         catch (com.google.gdata.util.AuthenticationException exception) 
           {
             connected = false;
             System.out.println("com.google.gdata.util.AuthenticationException");
           }

         /*}*/
         if (connected == true)
           {
             CalTelCalendarHandling calTelCalendarHandling = new CalTelCalendarHandling ();
             calTelCalendarHandling.setCalendarGui (this.app.getCalTelView (), this.app.getCalendarService(), userName);

             CalTelContactHandling calTelContactHandling = new CalTelContactHandling ();
             calTelContactHandling.setContactGui (this.app.getContactService(), this.app.getCalTelView (), userName);
             this.app.setUsername (userName);
             this.hide();
           }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new conexionwindow(null).setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private java.awt.Button acceptBtn;
        private java.awt.Label calendarFilePath;
        private java.awt.TextField calendarTxt;
        private java.awt.Button cancelBtn;
        private java.awt.Button cargarBtn;
        private java.awt.TextField contactTxt;
        private java.awt.Label contactsFilePath;
        private java.awt.Label eventNameLabel;
        private javax.swing.JLabel jLabel1;
        private java.awt.TextField mailTxt;
        private javax.swing.JPasswordField passwordTxt;
        private java.awt.Label timeLabel;
        // End of variables declaration//GEN-END:variables

}
